<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.pojo.Student" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Oct 14 00:06:58 CST 2022.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="stud_name" property="studName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="grade" property="grade" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Oct 14 00:06:58 CST 2022.
    -->
    id, stud_name, sex, grade
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Oct 14 00:06:58 CST 2022.
    -->
    select
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Oct 14 00:06:58 CST 2022.
    -->
    delete from student
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.pojo.Student" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Oct 14 00:06:58 CST 2022.
    -->
    insert into student (id, stud_name, sex,
      grade)
    values (#{id,jdbcType=BIGINT}, #{studName,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT},
      #{grade,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.pojo.Student" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Oct 14 00:06:58 CST 2022.
    -->
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studName != null" >
        stud_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="grade != null" >
        grade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="studName != null" >
        #{studName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.pojo.Student" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Oct 14 00:06:58 CST 2022.
    -->
    update student
    <set >
      <if test="studName != null" >
        stud_name = #{studName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.pojo.Student" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Oct 14 00:06:58 CST 2022.
    -->
    update student
    set stud_name = #{studName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      grade = #{grade,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByConditionForPage" parameterType="map" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from student
    <where>
      <if test="student.studName!=null and student.studName!=''">
        and stud_name like concat('%',#{student.studName},'%')
      </if>
      <if test="student.sex!=null">
        and sex = #{student.sex}
      </if>
      <if test="student.grade!=null">
        and grade = #{student.grade}
      </if>
    </where>
    limit #{startNo},#{pageSize}
  </select>

  <delete id="deleteByIds">
    delete from student
    where id in
    <foreach collection="array" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </delete>

  <insert id="insertByList">
    <foreach collection="list" item="student" separator=",">
      insert into student
        <trim prefix="(" suffix=")" suffixOverrides="," >
          <if test="student.id != null" >
            id,
          </if>
          <if test="student.studName != null" >
            stud_name,
          </if>
          <if test="student.sex != null" >
            sex,
          </if>
          <if test="student.grade != null" >
            grade,
          </if>
        </trim>
      values
        <trim prefix="values (" suffix=")" suffixOverrides="," >
          <if test="student.id != null" >
            #{student.id,jdbcType=BIGINT},
          </if>
          <if test="student.studName != null" >
            #{student.studName,jdbcType=VARCHAR},
          </if>
          <if test="student.sex != null" >
            #{student.sex,jdbcType=TINYINT},
          </if>
          <if test="student.grade != null" >
            #{student.grade,jdbcType=INTEGER},
          </if>
        </trim>
    </foreach>
  </insert>

  <select id="selectCountByCondition" parameterType="map" resultType="int">
    select count(*)
    from student
    <where>
      <if test="student.studName!=null and student.studName!=''">
        and stud_name like concat('%',#{student.studName},'%')
      </if>
      <if test="student.sex!=null">
        and sex = #{student.sex}
      </if>
      <if test="student.grade!=null">
        and grade = #{student.grade}
      </if>
    </where>
  </select>
</mapper>
